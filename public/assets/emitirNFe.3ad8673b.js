var $={methods:{async emitirNFeV2({idVenda:d,idFatura:s},l=1,i=""){var u;try{$utils.verificarExcecao(![1,0].includes(l)||!(d||s),"Par\xE2metros inv\xE1lidos.");const o=s||d,a=await $db.hibrido.le({table:"documento",id:o});if($utils.verificarErro(!a||!a.status||!a.tipo,"Erro ao emitir nota. Falha na consulta da fatura/venda."),$utils.verificarErro(!this.$utils.mapearStatus(a).permiteNota,`A ${a.tipo} n\xE3o foi finalizada.`),i!=="Remessa"){const f=await $db.hibrido.lista({table:"documentoFiscalEletronico",where:{idDocumento:o}});if($utils.verificarErro(!f,"Falha na consulta das notas"),$utils.verificarErro(f.find(r=>r.situacao!=="Cancelado"&&r.operacao===i),`${a.tipo} j\xE1 possui nota de ${i}`),d){$utils.verificarErro(a.tipo!=="Venda","Venda inv\xE1lida");const r=await $db.hibrido.lista({table:"documentoFiscalEletronico",where:{idDocumento:a.idFatura}});$utils.verificarErro(!r,"Falha na consulta das notas"),$utils.verificarErro(r.find(t=>t.situacao!=="Cancelado"&&t.operacao===i),`Fatura da Venda j\xE1 possui nota de ${i}`)}if(s){$utils.verificarErro(a.tipo!=="Fatura","Fatura inv\xE1lida");const r=await $db.hibrido.lista({table:"documento",where:{idFatura:s}});let t;for(const n of r){const c=Number(n==null?void 0:n.codigoDocumentoOperacao);if(Number.isInteger(c)&&c>0){const e=await $db.hibrido.lista({table:"documentoOperacao",where:{codigoDocumentoOperacao:c}});t||(t=e[0]),$utils.verificarErro((t==null?void 0:t.finalidade)!==((u=e[0])==null?void 0:u.finalidade),"Vendas possuem opera\xE7\xF5es com finalidades diferentes. Favor emitir a NFe a partir de cada venda da fatura.")}const m=await $db.hibrido.lista({table:"documentoFiscalEletronico",where:{idDocumento:n.id}});$utils.verificarErro(!m,"Falha na consulta das notas"),$utils.verificarErro(m.find(e=>e.situacao!=="Cancelado"&&e.operacao===i),`Fatura/Venda j\xE1 possui nota de ${i}. Favor emitir a NFe a partir de cada venda da fatura.`)}}}await $utils.atualizarCfop(o),this.$q.loading.show({message:"Processando"}),$utils.emitter.emit("gerarNFe",o,l,i)}catch(o){this.$q.notifyError("Ocorreu um erro ao gerar NFe",o)}finally{this.$q.loading.hide()}}}};export{$ as e};
